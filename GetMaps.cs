using System;
using Newtonsoft.Json;
using System.IO;
using System.Reflection;

public class GetMaps
{
    Maps maps;
    public GetMaps()
	{
        string output = File.ReadAllText(System.IO.Path.GetDirectoryName(Assembly.GetEntryAssembly().Location) + "/maps.json");
        maps = JsonConvert.DeserializeObject<Maps>(output);

    }

    internal static int[,] map(int v)
    {
        switch (v){
            case 0: return new int[20,20]
                {
                    { 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    { 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    { 7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,0,7},
                    { 7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,7,0,7},
                    { 7,0,7,7,7,7,7,7,7,0,7,7,7,7,7,7,0,0,0,7},
                    { 7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,7,7,7,7},
                    { 7,7,7,7,7,7,7,0,7,7,7,7,7,7,0,7,0,0,0,7},
                    { 7,0,0,0,0,0,0,0,7,0,0,0,0,7,0,0,0,7,0,7},
                    { 7,0,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,0,7},
                    { 7,0,7,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,0,7},
                    { 7,0,7,0,0,0,0,7,0,7,0,7,7,7,7,7,0,7,0,7},
                    { 7,0,7,7,7,7,7,7,0,7,0,0,0,0,0,7,0,7,0,7},
                    { 7,0,7,0,0,0,0,0,0,7,7,7,7,7,0,7,0,7,0,7},
                    { 7,0,7,0,7,7,7,7,7,7,0,0,0,0,0,7,0,0,0,7},
                    { 7,0,7,0,0,0,0,0,7,7,0,7,7,7,7,7,7,7,7,7},
                    { 7,0,7,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,0,7},
                    { 7,0,7,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,0,7},
                    { 7,0,7,0,7,7,7,7,7,7,0,0,0,0,0,0,0,7,0,7},
                    { 7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,9,7},
                    { 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7}
                };
            case 1: /*Game.Game.setEndPos(16,18);*/return new int[20,20]
                {
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,7,0,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,0,7},
                    {7,0,0,0,7,7,7,8,0,0,0,0,0,0,0,0,0,7,0,7},
                    {7,0,0,0,0,0,7,7,7,7,7,7,7,7,0,7,0,7,0,7},
                    {7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,7},
                    {7,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,0,7,0,7},
                    {7,0,0,0,7,8,0,0,0,0,0,0,0,0,0,7,0,7,0,7},
                    {7,0,0,0,7,7,7,7,7,7,7,7,7,7,0,7,0,7,0,7},
                    {7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7},
                    {7,0,0,0,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7},
                    {7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,7,0,7,0,0,0,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,9,7},
                    {7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7}
                };
            case 2: return new int[20,20]
                {
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7},
                    {7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,7},
                    {7,0,7,0,7,7,7,7,7,7,7,7,7,7,7,7,0,7,0,7},
                    {7,0,7,0,7,0,0,0,0,0,0,0,0,0,0,7,0,7,0,7},
                    {7,0,7,0,7,0,7,7,7,7,7,7,7,7,0,7,0,7,0,7},
                    {7,0,7,0,7,0,7,0,0,0,0,0,0,7,0,7,0,7,0,7},
                    {7,0,7,0,7,0,7,0,7,7,7,7,0,7,0,7,0,7,0,7},
                    {7,0,7,0,7,0,7,0,7,7,7,7,0,7,0,7,0,7,0,7},
                    {7,0,7,0,7,0,7,0,11,0,8,7,0,7,0,7,0,7,0,7},
                    {7,0,7,0,7,0,7,7,7,7,7,7,0,7,0,7,0,7,0,7},
                    {7,0,7,0,7,0,0,0,0,0,0,0,0,7,0,7,0,7,0,7},
                    {7,0,7,0,7,7,7,7,7,7,7,7,7,7,0,7,0,7,9,7},
                    {7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,7,7,7},
                    {7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,8,7},
                    {7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,7},
                    {7,0,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,11,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7},
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7}
                };
            case 3: return new int[20,20]
                {
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,0,0,0,0,12,0,12,0,0,0,0,7,0,0,0,7},
                    {7,0,7,7,7,7,7,13,7,13,7,7,7,7,0,7,0,0,0,7},
                    {7,14,7,7,7,7,7,0,7,0,7,0,0,7,0,7,0,0,0,7},
                    {7,0,12,0,0,0,11,0,7,0,7,0,0,7,0,7,0,0,0,7},
                    {7,0,7,7,7,13,7,7,7,0,7,7,7,7,0,7,0,0,0,7},
                    {7,0,11,0,12,0,7,0,11,0,12,0,7,7,0,7,0,0,0,7},
                    {7,7,7,14,7,0,7,0,7,7,7,0,7,7,0,7,0,0,0,7},
                    {7,0,11,0,7,0,7,0,7,8,0,0,7,7,0,7,0,0,0,7},
                    {7,13,7,14,7,13,7,13,7,7,7,7,7,7,13,7,7,7,7,7},
                    {7,0,12,0,11,0,0,0,0,0,11,0,0,0,0,0,0,0,0,7},
                    {7,7,7,14,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7},
                    {0,0,0,0,0,0,11,0,7,0,0,0,0,0,0,0,11,0,7,7},
                    {13,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,0,0,7},
                    {0,7,0,0,0,0,11,0,7,6,6,6,6,6,7,0,11,0,7,7},
                    {0,7,13,7,7,7,7,0,7,6,6,6,6,6,7,0,7,7,7,7},
                    {0,7,0,7,7,0,11,0,7,6,6,6,6,6,7,0,7,8,7,7},
                    {13,7,13,7,7,13,7,14,7,7,7,7,7,7,7,0,7,0,7,7},
                    {0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,7,9,7,7},
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7}
                };
            case 4: return new int[20, 20]
                {
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7},
                    {7,0,0,0,0,0,7,0,7,7,7,7,7,7,7,7,7,0,0,7},
                    {7,0,0,0,0,7,7,0,16,16,16,16,16,16,11,0,7,0,0,7},
                    {7,0,0,0,0,7,0,16,16,16,16,16,16,16,11,0,7,0,9,7},
                    {7,0,0,0,0,7,0,7,7,7,7,7,7,7,7,14,7,7,7,7},
                    {7,0,0,0,0,7,16,16,16,16,16,16,16,16,12,0,0,0,7,7},
                    {7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7}
                };
            default: return new int[20, 20];
        }
    }
}
